<?xml version="1.0" encoding="UTF-8"?>
<!-- 
    Esse pom foi gerado por pura "teimosia", por meio de várias pesquisas
    no Google.
                
    A ideia era automatizar o máximo possível para facilitar o desenvolvimento
    descentralizado desse projeto. Pode-se dizer que foi um sucesso parcial.
                
    O Maven está responsável por baixar o Antlr 4 e executá-lo de forma apropriada
    (visitor, listener, -package) durante o processo de build.
    
    Utilizando o plugin exec-maven, foi possível também fazer com que o processo de
    execução da Main.java fosse substituído pela invocação do compilador automático
    disponibilizado.
                
    Infelizmente, ainda precisamos do Antlr.jar para executar nosso próprio .jar.
    O Maven chega a baixá-lo, mas o armazena em uma pasta própria (algo como ~/.m2).
                
    Acabamos adicionando a biblioteca do Antlr na pasta lib/ e adicionando-as
    ao versionamento do projeto.
    
    O Maven fica responsável por linká-la ao executável durante a build, copiando-a
    para target/libs.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>br.ufscar.dc.compiladores</groupId>
    <artifactId>Trabalho1</artifactId>
    <version>1</version>
    <packaging>jar</packaging>
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
    </properties>
        
    <dependencies>
        <!-- https://mvnrepository.com/artifact/org.antlr/antlr4-runtime -->
        <dependency>
            <groupId>org.antlr</groupId>
            <artifactId>antlr4-runtime</artifactId>
            <version>4.3</version>
        </dependency>
    </dependencies>
    <build>
        <plugins>
            <plugin>
                <groupId>org.antlr</groupId>
                <artifactId>antlr4-maven-plugin</artifactId>
                <version>4.3</version>
                <executions>
                    <execution>
                        <id>antlr</id>
                        <goals>
                            <goal>antlr4</goal>
                        </goals>
                        <configuration>
                            <visitor>true</visitor>
                            <listener>true</listener>
                            <sourceDirectory>src</sourceDirectory>
                            <arguments>
                                <argument>-package</argument>
                                <argument>main.antlr4</argument>
                            </arguments>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            
            <!--
                Resolves .jar dependencies.
                Source: http://stackoverflow.com/a/8842751
            -->
            <plugin>
                <artifactId>maven-jar-plugin</artifactId>
                <version>3.0.2</version>
                <configuration>
                    <archive>
                        <manifest>
                            <addClasspath>true</addClasspath>
                            <mainClass>trabalho1.Main</mainClass>
                            <packageName>trabalho1</packageName>
                            <classpathLayoutType>custom</classpathLayoutType>
                            <customClasspathLayout>libs/$${artifact.artifactId}.$${artifact.extension}</customClasspathLayout>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-dependencies</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/libs</outputDirectory>
                            <overWriteReleases>true</overWriteReleases>
                            <overWriteSnapshots>true</overWriteSnapshots>
                            <overWriteIfNewer>true</overWriteIfNewer>
                            <excludeScope>test</excludeScope>
                            <includeScope>compile</includeScope>
                            <stripVersion>true</stripVersion>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>1.2.1</version>
                <executions>
                    <execution>
                        <id>default-cli</id>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>java</executable>
                            <arguments>
                                <argument>-jar</argument>
                                <argument>${basedir}/corretor/CorretorTrabalho1.jar</argument>
                                <argument>java -jar ${basedir}/target/Trabalho1-1.jar</argument>
                                
                                <argument>gcc</argument>
                                <argument>${basedir}/tmp</argument>
                                <argument>${basedir}/corretor/casosDeTesteT1</argument>
                                <argument>""</argument>
                                <!-- Opções: sintatico, semantico, gerador, tudo-->
                                <argument>tudo</argument>
                            </arguments>
                        </configuration>                        
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>